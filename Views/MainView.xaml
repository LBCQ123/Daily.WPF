<Window x:Class="Daily.WPF.Views.MainView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Daily.WPF.Views"
        xmlns:prism="http://prismlibrary.com/"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        mc:Ignorable="d"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        Title="{Binding Title}" Height="700" Width="1200">

    <WindowChrome.WindowChrome>
        <WindowChrome GlassFrameThickness="0"/>
    </WindowChrome.WindowChrome>
    
    
    <materialDesign:DialogHost DialogTheme="Inherit"
                             Identifier="RootDialog"
                             SnackbarMessageQueue="{Binding ElementName=MainSnackbar, Path=MessageQueue}">

        <materialDesign:DrawerHost IsLeftDrawerOpen="{Binding ElementName=MenuToggleButton, Path=IsChecked}">
            <materialDesign:DrawerHost.LeftDrawerContent>
                <DockPanel MinWidth="220">
                    <!--菜单-->
                </DockPanel>
            </materialDesign:DrawerHost.LeftDrawerContent>

            <!--头部-->
            <DockPanel>
                <materialDesign:ColorZone Padding="16"
                                  materialDesign:ElevationAssist.Elevation="Dp4"
                                  DockPanel.Dock="Top"
                                  Mode="PrimaryMid">
                    <DockPanel>
                        <StackPanel Orientation="Horizontal">
                            <ToggleButton x:Name="MenuToggleButton"
                            AutomationProperties.Name="HamburgerToggleButton"
                            IsChecked="False"
                            Style="{StaticResource MaterialDesignHamburgerToggleButton}" />

                            <Button Margin="24,0,0,0"
                      materialDesign:RippleAssist.Feedback="{Binding RelativeSource={RelativeSource Self}, Path=Foreground, Converter={StaticResource BrushRoundConverter}}"
                      Content="{materialDesign:PackIcon Kind=ArrowLeft,
                                                        Size=24}"
                      Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"
                      Style="{StaticResource MaterialDesignToolButton}"
                      ToolTip="Previous Item" />

                            <Button Margin="16,0,0,0"
                      materialDesign:RippleAssist.Feedback="{Binding RelativeSource={RelativeSource Self}, Path=Foreground, Converter={StaticResource BrushRoundConverter}}"
                      Content="{materialDesign:PackIcon Kind=ArrowRight,
                                                        Size=24}"
                      Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"
                      Style="{StaticResource MaterialDesignToolButton}"
                      ToolTip="Next Item" />

                        </StackPanel>

                        <TextBlock Margin="20,0,0,0"
                       HorizontalAlignment="Left"
                       VerticalAlignment="Center"
                       AutomationProperties.Name="Material Design In XAML Toolkit"
                       FontSize="22"
                       Text="我的日常" />

                        <!--关闭-->
                        <Button DockPanel.Dock="Right" HorizontalAlignment="Right"
                                Content="{materialDesign:PackIcon Kind=Close,
                                                        Size=24}"
                                Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"
                              Style="{StaticResource MaterialDesignToolButton}"
                              ToolTip="Close" >
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <i:CallMethodAction TargetObject="{Binding RelativeSource={RelativeSource AncestorType=Window}}" MethodName="Close"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Button>
                        <!--最大化-->
                        <Button DockPanel.Dock="Right" HorizontalAlignment="Right"
                                Content="{materialDesign:PackIcon Kind=Maximize,
                                                        Size=24}"
                                Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"
                              Style="{StaticResource MaterialDesignToolButton}"
                              ToolTip="Maximize" Click="MaxButton_Click">
                        </Button>
                        <!--最小化-->
                        <Button DockPanel.Dock="Right" HorizontalAlignment="Right"
                                Content="{materialDesign:PackIcon Kind=Minimize,
                                                        Size=24}"
                                Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"
                              Style="{StaticResource MaterialDesignToolButton}"
                              ToolTip="Minimize" >
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <i:ChangePropertyAction TargetObject="{Binding RelativeSource={RelativeSource AncestorType=Window}}"
                                                PropertyName="WindowState"
                                                Value="{x:Static WindowState.Minimized}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Button>

                        <Button DockPanel.Dock="Right" HorizontalAlignment="Right"
                                Content="{materialDesign:PackIcon Kind=Minecraft,
                                                        Size=24}"
                                Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"
                              Style="{StaticResource MaterialDesignToolButton}"
                              ToolTip="登录用户" >
                        </Button>
                    </DockPanel>
                </materialDesign:ColorZone>

                <!--正文-->
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    
                </Grid>
            </DockPanel>
        </materialDesign:DrawerHost>
    </materialDesign:DialogHost>
</Window>
